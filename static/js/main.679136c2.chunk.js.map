{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/ContactForm/Form.module.css","components/ContactForm/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","phoneInputId","handleChange","event","currentTarget","value","setState","reset","handleSubmit","e","preventDefault","props","addContact","onSubmit","this","className","styles","formLabel","htmlFor","type","pattern","title","required","formInput","onChange","id","addContactBtn","Component","ContactList","contacts","deleteContacts","contactList","map","contactItem","contactText","deleteBtn","onClick","Filter","filterContainer","filterInput","App","filter","find","user","console","log","alert","contact","contactId","prevState","onFilterChange","handleFilteredContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","mainTitle","contactsTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.679136c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__Z7WqE\",\"filterInput\":\"Filter_filterInput__3BiFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"App_mainTitle__35SAw\",\"contactsTitle\":\"App_contactsTitle__2N5lp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"Form_ContactForm__3tvYY\",\"formLabel\":\"Form_formLabel__1lZ0C\",\"formInput\":\"Form_formInput__3Mxyy\",\"addContactBtn\":\"Form_addContactBtn__lGtxN\"};","import React, { Component } from 'react';\r\nimport styles from './Form.module.css';\r\nimport shortid from 'shortid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  phoneInputId = shortid.generate();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.ContactForm}>\r\n        <label className={styles.formLabel} htmlFor={this.nameInputId}>\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={styles.formInput}\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          id={this.nameInputId}\r\n        />\r\n        <label className={styles.formLabel} htmlFor={this.phoneInputId}>\r\n          Number\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={styles.formInput}\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          id={this.phoneInputId}\r\n        />\r\n        <button className={styles.addContactBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContacts }) => {\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.contactItem}>\r\n          <span className={styles.contactText}>{name}:</span>\r\n          <span>{number}</span>\r\n          <button\r\n            className={styles.deleteBtn}\r\n            type=\"button\"\r\n            onClick={() => deleteContacts(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  deleteContacts: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={styles.filterContainer}>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/Form.jsx';\nimport ContactList from './components/ContactList/ContactList.jsx';\nimport shortid from 'shortid';\nimport Filter from './components/Filter/Filter.jsx';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    if (this.state.contacts.find(user => user.name === name)) {\n      console.log(alert(`${name} is already in contacts`));\n      return;\n    }\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    // console.log('App componentDidMount');\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    // console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      // console.log('Contacts field updated');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n    // console.log(prevState);\n    // console.log(this.state);\n  }\n\n  onFilterChange = event => {\n    this.setState({\n      filter: event.currentTarget.value,\n    });\n  };\n\n  handleFilteredContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const filteredContacts = this.handleFilteredContacts();\n\n    return (\n      <div>\n        <h1 className={styles.mainTitle}>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n        <h2 className={styles.contactsTitle}>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.onFilterChange} />\n        <ContactList\n          contacts={filteredContacts}\n          deleteContacts={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1LdZF\",\"contactItem\":\"ContactList_contactItem__14gHF\",\"contactText\":\"ContactList_contactText__8fFHU\",\"deleteBtn\":\"ContactList_deleteBtn__3gjtM\"};"],"sourceRoot":""}